//  signup 13-2-24---
import * as React from "react";
import { StyleSheet, View, Image, Pressable, Text, ScrollView ,Dimensions, TextInput} from "react-native";
import { useNavigation } from "@react-navigation/native";
import Property1Default from "../components/Property1Default";
import FormContainer from "../components/FormContainer";
import PasswordSection from "../components/PasswordSection";
import ConfirmPasswordForm from "../components/ConfirmPasswordForm";
import { Color, Border, FontSize, FontFamily } from "../GlobalStyles";

const SignUp = () => {
  const navigation = useNavigation();
  const windowHeight = Dimensions.get('window').height;
  

  return (
    <ScrollView>
    <View style={[{height:windowHeight+100,backgroundColor: Color.colorGray_100,
    flex: 1,}, styles.iconLayout]}>
      <View style={styles.rectangleParent}>
        <View style={[styles.groupChild, styles.groupShadowBox]} />
        <View style={[styles.rectangleGroup, styles.groupLayout]}>
          <View style={[styles.groupItem, styles.groupLayout]} />
          <Image
            style={[styles.profmLogo1111, styles.profmLogo1111Position]}
            resizeMode="cover"
            source={require("../assets/profm-logo1-1-1-11.png")}
          />
        </View>
        <Pressable style={styles.arrow21} onPress={() => navigation.goBack()}>
          <Image
            style={[styles.icon, styles.iconLayout]}
            resizeMode="cover"
            source={require("../assets/arrow-2-11.png")}
          />
        </Pressable>
        <Text style={styles.signUp1}>Sign up</Text>
      </View>
      
      <Property1Default
        logIn="sign up"
        property1DefaultPosition="absolute"
        property1DefaultMarginLeft={"2%"}
        property1DefaultTop={"77%"}
        property1DefaultLeft="0%"
        property1DefaultWidth={"95%"}
        property1DefaultHeight={48}
        property1DefaultRight="unset"
        property1DefaultBottom="unset"
        logInLetterSpacing={0.6}
        logInLineHeight={26}
        logInTextTransform="capitalize"
        logInWidth="58.31%"
        logInLeft="20.7%"
        onButtonBigPress={() => navigation.navigate("LogIn")}
      />
      <View style={styles.frameParent}>
        <View style={styles.frameGroup}>
          {/* <FormContainer fullName="First name" personName="Assem" />
          <FormContainer
            fullName="Last name"
            personName="Emara"
            propWidth={"30%"}
            propMarginLeft={"30%"}
          /> */}
          <View style={styles.mobileParent}>
          <Text style={styles.mobile}>{`First name `}</Text>
          <View style={styles.rectangleContainer}>
            <View style={styles.frameShadowBoxName} />
            <View
              style={[styles.vuesaxoutlinecallParent, styles.parentPosition]}
            >
              <Image
                style={styles.vuesaxoutlinecallIcon}
                resizeMode="cover"
                source={require("../assets/profile.png")}
              />
              <TextInput/>
              <Text style={styles.text}>+966 500891756</Text>
            </View>
          </View>
        </View>
        <View style={styles.mobileParent}>
          <Text style={styles.mobile}>{`Last name `}</Text>
          <View style={styles.rectangleContainer}>
            <View style={styles.frameShadowBoxName} />
            <View
              style={[styles.vuesaxoutlinecallParent, styles.parentPosition]}
            >
              <Image
                style={styles.vuesaxoutlinecallIcon}
                resizeMode="cover"
                source={require("../assets/profile.png")}
              />
              <Text style={styles.text}>+966 500891756</Text>
            </View>
          </View>
        </View>
        </View>
        <View style={styles.mobileParent}>
          <Text style={styles.mobile}>{`Mobile `}</Text>
          <View style={styles.rectangleContainer}>
            <View style={styles.frameShadowBox} />
            <View
              style={[styles.vuesaxoutlinecallParent, styles.parentPosition]}
            >
              <Image
                style={styles.vuesaxoutlinecallIcon}
                resizeMode="cover"
                source={require("../assets/vuesaxoutlinecall1.png")}
              />
              <Text style={styles.text}>+966 500891756</Text>
            </View>
          </View>
        </View>
        {/*mail */}
        <View style={styles.mobileParent}>
       
          <Text style={styles.mobile}>Email</Text>
          <View style={styles.rectangleContainer}>
            <View style={styles.frameShadowBox} />
            <View style={[styles.smsParent, styles.parentPosition]}>
              <Image
                style={styles.smsIcon}
                resizeMode="cover"
                source={require("../assets/sms.png")}
              />
               <TextInput style={styles.mobile}/>
              <Text style={styles.text}>Logicsystems@gmail.com</Text>
            </View>
          </View>
        </View>
        
        <PasswordSection />
        <ConfirmPasswordForm />
        
      </View>
      <View style={[styles.frameContainer, styles.profmLogo1111Position]}>
        <View style={styles.lineParent}>
          <View style={[styles.frameInner, styles.lineViewBorder]} />
          <Text style={styles.orSignUp}>or sign up with</Text>
          <View style={[styles.lineView, styles.lineViewBorder]} />
        </View>
        <View style={styles.groupParent}>
          <Image
            style={styles.groupIconLayout}
            resizeMode="cover"
            source={require("../assets/group-2386551.png")}
          />
          <Image
            style={[styles.frameChild1, styles.groupIconLayout]}
            resizeMode="cover"
            source={require("../assets/group-2386541.png")}
          />
          <Image
            style={[styles.frameChild1, styles.groupIconLayout]}
            resizeMode="cover"
            source={require("../assets/group-2386561.png")}
          />
        </View>
      </View>
      
    </View>
    </ScrollView>
  );
};

const styles = StyleSheet.create({
  iconLayout: {
    overflow: "hidden",
    width: "100%",
  },
  groupShadowBox: {
    shadowOpacity: 1,
    shadowOffset: {
      width: 0,
      height: 4,
    },
    top: 0,
  },
  groupLayout: {
    height: 48,
    width: 160,
    left: "50%",
    position: "absolute",
  },
  profmLogo1111Position: {
    left: "50%",
    position: "absolute",
  },
  parentPosition: {
    zIndex: 1,
    top: 14,
    justifyContent: "center",
    height: 20,
    alignItems: "center",
    flexDirection: "row",
    position: "absolute",
  },
  lineViewBorder: {
    opacity: 0.7,
    height: 1,
    borderTopWidth: 0.5,
    borderColor: Color.a6A6A6,
    borderStyle: "solid",
  },
  groupIconLayout: {
    height: 60,
    width: 60,
  },
  groupChild: {
    borderBottomRightRadius: Border.br_3xs,
    borderBottomLeftRadius: Border.br_3xs,
    height: 99,
    elevation: 20,
    shadowRadius: 20,
    shadowColor: "rgba(0, 0, 0, 0.2)",
    backgroundColor: Color.whait,
    shadowOpacity: 1,
    shadowOffset: {
      width: 0,
      height: 4,
    },
    width: "100%",
    left: 0,
    position: "absolute",
  },
  groupItem: {
    marginLeft: "-60%",
    borderRadius: Border.br_mini,
    backgroundColor: Color.colorAliceblue_100,
    shadowColor: "rgba(0, 0, 0, 0.08)",
    shadowRadius: 10,
    elevation: 10,
    shadowOpacity: 1,
    shadowOffset: {
      width: 0,
      height: 4,
    },
    top: 0,
    width: 160,
  },
  profmLogo1111: {
    marginLeft: -50,
    top: "10%",
    width: 100,
    height: 36,
  },
  rectangleGroup: {
    marginLeft: "-15%",
    top: "60%",
  },
  icon: {
    height: "100%",
  },
  arrow21: {
    top: "40%",
    width: 24,
    height: 24,
    left: "5%",
    position: "absolute",
  },
  signUp1: {
    marginLeft: -27.5,
    top: "27%",
    fontSize: FontSize.size_base,
    fontWeight: "700",
    textAlign: "center",
    color: Color.praimary,
    fontFamily: FontFamily.dGBaysan,
    lineHeight: 30,
    left: "50%",
    position: "absolute",
  },
  rectangleParent: {
    height: 124,
    width: "100%",
    left: 0,
    top: 0,
    position: "absolute",
  },
  frameGroup: {
    flexDirection: "row",
  },
  mobile: {
    fontWeight: "600",
    color: Color.grayBlack,
    textAlign: "left",
    width: 83,
    alignItems: "center",
    display: "flex",
    fontSize: FontSize.med_size,
    fontFamily: FontFamily.dGBaysan,
    lineHeight: 30,
    height: 24,
    left:"5%"
  },
  mobile: {
    fontWeight: "600",
    color: Color.grayBlack,
    textAlign: "left",
    width: 83,
    alignItems: "center",
    display: "flex",
    fontSize: FontSize.med_size,
    fontFamily: FontFamily.dGBaysan,
    lineHeight: 30,
    height: 24,
    left:"5%"
  },
  frameShadowBox: {
    zIndex: 0,
    borderWidth: 0.3,
    borderColor: Color.praimary,
    borderStyle: "solid",
    borderRadius: Border.br_5xs,
    width: 343,
    height: 48,
    shadowOpacity: 1,
    elevation: 20,
    shadowRadius: 20,
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowColor: "rgba(0, 0, 0, 0.03)",
    backgroundColor: Color.whait,
  },
  frameShadowBoxName: {
    zIndex: 0,
    borderWidth: 0.3,
    borderColor: Color.praimary,
    borderStyle: "solid",
    borderRadius: Border.br_5xs,
    width: 160,
    height: 48,
    shadowOpacity: 1,
    elevation: 20,
    shadowRadius: 20,
    marginLeft:"3%",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowColor: "rgba(0, 0, 0, 0.03)",
    backgroundColor: Color.whait,
  },
  vuesaxoutlinecallIcon: {
    width: 18,
    height: 18,
  },
  text: {
    color: Color.black,
    marginLeft: 8,
    fontSize: FontSize.med_size,
    textAlign: "center",
    fontFamily: FontFamily.dGBaysan,
  },
  vuesaxoutlinecallParent: {
    left: "10%",
  },
  rectangleContainer: {
    marginTop: 4,
  },
  mobileParent: {
    marginTop: 16,
  },
  smsIcon: {
    width: 20,
    height: 20,
  },
  smsParent: {
    left: 11,
  },
  frameParent: {
    top: "17%",
    left: "5%",
    position: "absolute",
  },
  frameInner: {
    width: 121,
  },
  orSignUp: {
    fontSize: FontSize.size_sm,
    fontWeight: "300",
    width: 93,
    height: 16,
    justifyContent: "center",
    alignItems: "center",
    display: "flex",
    textAlign: "center",
    color: Color.praimary,
    fontFamily: FontFamily.dGBaysan,
    lineHeight: 30,
  },
  lineView: {
    width: 120,
  },
  lineParent: {
    justifyContent: "space-between",
    width: 343,
    alignItems: "center",
    flexDirection: "row",
  },
  frameChild1: {
    marginLeft: 40,
  },
  groupParent: {
    marginTop: 24,
    flexDirection: "row",
  },
  frameContainer: {
    marginLeft: -171.5,
    top: 680,
    alignItems: "center",
  },
  signUp: {
    backgroundColor: Color.colorGray_100,
    flex: 1,
    height: 812,
  },
});

export default SignUp;

//signup end-----------
//splash 18-2-24-------
import { StyleSheet, Text, View,Image,Dimensions, } from 'react-native'
import React, { useEffect } from 'react'
import Splash1 from './Splash1';
import { useNavigation } from "@react-navigation/native";
import { Border, Color } from "../GlobalStyles";

const Splash = () => {
    const navigation = useNavigation();
    useEffect(()=>{
        setTimeout(()=>{
         //  navigation.navigate('OnbordingCarousel')
console.log("navigations")
        },2000)
    },[]);


    const windowHeight = Dimensions.get('window').height;
  return (
    <View style={[styles.splash15]}>
    {/* <Image
      style={[styles.vectorIcon, styles.vectorIconPosition,{ height: windowHeight+130,}]}
      resizeMode="cover"
      source={require("../assets/vector1.png")}
    />
    <Image
      style={[styles.groupIcon, styles.groupIconLayout]}
      resizeMode="cover"
      source={require("../assets/group2.png")}
    />
    <View style={[styles.splash15Child, styles.vectorIconPosition]} />
    <Image
      style={[styles.groupIcon1, styles.groupIconLayout]}
      resizeMode="cover"
      source={require("../assets/group3.png")}
    />
    <Image
      style={[styles.profmLogo1111, styles.vectorIconPosition]}
      resizeMode="cover"
      source={require("../assets/profm-logo1-1-1-12.png")}
    /> */}
    <Image
        source={require("../assets/splashScreen.gif")}
        style={styles.gif}
        resizeMode="contain" // Adjust this based on your layout requirements
      />
  </View>
);
};

const styles = StyleSheet.create({
  gif: {
    width: "100%",
    height: "100%",
  },
vectorIconPosition: {
  left: "50%",
  position: "absolute",
},
groupIconLayout: {
  maxHeight: "100%",
  maxWidth: "100%",
  position: "absolute",
  overflow: "hidden",
},
vectorIcon: {
  marginLeft: "-92%",
  top: "-13%",
  width: "190%",
 
},
groupIcon: {
  height: "12.87%",
  top: "87.07%",
  right: "0%",
  bottom: "0.06%",
  left: "0%",
  width: "100%",
  maxHeight: "100%",
  maxWidth: "100%",
},
splash15Child: {
  marginLeft: "-25%",
  top: "75.3%",
  borderRadius: Border.br_8xs,
  backgroundColor: Color.colorGainsboro_200,
  width: 240,
  height: 12,
},
groupIcon1: {
  height: "7.36%",
  width: "8.16%",
  top: "69.70%",
  right: "70.93%",
  bottom: "34.67%",
  left: "21.31%",
},
profmLogo1111: {
  marginLeft: -99.5,
  top: 380,
  width: 200,
  height: 70,
},
splash15: {
  backgroundColor: Color.colorGray_100,
  flex: 1,
  height: 812,
  overflow: "hidden",
  width: "100%",
},
});

export default Splash;

//splash end---------------
//home 20-2-24------
import React, { useState, useCallback } from "react";
import { Text, StyleSheet, Image, View, Pressable, Modal, ScrollView,Dimensions,Button,TouchableOpacity, FlatList  } from "react-native";
import LinearGradient from "react-native-linear-gradient";
import ViewDetails6 from "./ViewDetails6";
import ViewDetails5 from "./ViewDetails5";
import ViewDetails4 from "./ViewDetails4";
import { useNavigation } from "@react-navigation/native";
import YearlyServiceSection from "./YearlyServiceSection";
import BestOffersSection from "./BestOffersSection";
import FormSection from "./FormSection";
import Property1Default3 from "./Property1Default3";
import Property1Default4 from "./Property1Default4";
import SectionMenu from "./SectionMenu";
import { Color, FontFamily, FontSize,Border } from "../GlobalStyles";
import DiscountCarousal from "../screens/DiscountCarousal";
import { isEnabled } from "react-native/Libraries/Performance/Systrace";




{/* */}
const CustomRadioButton = ({ options, selectedOption, onSelect }) => {
  const renderItem = ({ item }) => (
    <TouchableOpacity
      style={[
        styles.radioButton,
        { backgroundColor: selectedOption === item.key ? Color.praimary : 'transparent' },
        item.key === options.length ? styles.lastRadioButton : null,
      ]}
      onPress={() => onSelect(item.key)}
    >
      <Text
        style={[
          styles.radioText,
          { color: selectedOption === item.key ? 'white' : Color.praimary },
        ]}
      >
        {item.text}
      </Text>
    </TouchableOpacity>
  );

  const renderSelectedView = () => {
    
  const [frameContainer22Visible, setFrameContainer22Visible] = useState(false);
  const [frameContainer30Visible, setFrameContainer30Visible] = useState(false);
  const [frameContainer38Visible, setFrameContainer38Visible] = useState(false);
    const openFrameContainer22 = useCallback(() => {
      setFrameContainer22Visible(true);
    }, []);
  
    const closeFrameContainer22 = useCallback(() => {
      setFrameContainer22Visible(false);
    }, []);
  
    const openFrameContainer30 = useCallback(() => {
      setFrameContainer30Visible(true);
    }, []);
  
    const closeFrameContainer30 = useCallback(() => {
      setFrameContainer30Visible(false);
    }, []);
  
    const openFrameContainer38 = useCallback(() => {
      setFrameContainer38Visible(true);
    }, []);
  
    const closeFrameContainer38 = useCallback(() => {
      setFrameContainer38Visible(false);
    }, []);
    const selectedItem = options.find((item) => item.key === selectedOption);
    if (!selectedItem) return null;

    switch (selectedItem.key) {
      case 1:
        return(
          <View style={styles.groupContainer}>
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-1.png")}
            cleaningTypeImageUrl="Regular cleaning"
            cleaningOptionImageId="(2 "
            rating="4.3"
            priceText="79 SAR "
            servicePriceText="100 SAR "
            discountPercentage="off 30 %"
            onFramePressablePress={openFrameContainer22}
          />
          {/*toggle btn */}
         
           {/*toggle btn */}
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-11.png")}
            cleaningTypeImageUrl="deep cleaning"
            cleaningOptionImageId="(4 "
            rating="4.6"
            priceText="240 SAR "
            servicePriceText="300 SAR "
            discountPercentage="off 20 %"
            propMarginTop={16}
            propLeft={291}
            onFramePressablePress={openFrameContainer30}
          />
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-12.png")}
            cleaningTypeImageUrl="Facade cleaning"
            cleaningOptionImageId="(4 "
            rating="4.8"
            priceText="700 SAR "
            servicePriceText="900 SAR "
            discountPercentage="off 15 %"
            propMarginTop={16}
            propLeft={295}
            onFramePressablePress={openFrameContainer38}
          />
        </View>
        ) ;
      case 2:
        return <View style={styles.view}><Text>Hospitality</Text></View>;
      case 3:
        return <View style={styles.view}><Text>Maintenance</Text></View>;
      case 4:
        return <View style={styles.view}><Text>Electrical Works</Text></View>;
      case 5:
        return <View style={styles.view}><Text>Sanitary &Plumbing</Text></View>;
      case 6:
        return <View style={styles.view}><Text>HVAC</Text></View>;
      case 7:
        return <View style={styles.view}><Text>Pest Control</Text></View>;
      case 8:
        return <View style={styles.view}><Text>Landscape</Text></View>;
      case 9:
        return <View style={styles.view}><Text>Carpentry</Text></View>;
      default:
        return null;
    }
  };

  return (
    <>
    <FlatList
      data={options}
      renderItem={renderItem}
      keyExtractor={(item) => item.key.toString()}
      horizontal={true}
      showsHorizontalScrollIndicator={false}
    />
     {renderSelectedView()}
     
     </>
    
  );
};



// Example usage:
const options = [
  { key: 1, text: 'Cleaning' },
  { key: 2, text: 'Hospitality' },
  { key: 3, text: 'Maintenance' },
  { key: 4, text: 'Electrical Works' },
  { key: 5, text: 'Sanitary &Plumbing' },
  { key: 6, text: 'HVAC' },
  { key: 7, text: 'Pest control' },
  { key: 8, text: 'Landscaping' },
  { key: 9, text: 'Carpentry' },
];
{/* */}

const Home = () => {
  const [frameContainer22Visible, setFrameContainer22Visible] = useState(false);
  const [frameContainer30Visible, setFrameContainer30Visible] = useState(false);
  const [frameContainer38Visible, setFrameContainer38Visible] = useState(false);
  const navigation = useNavigation();
  const [selectedOption, setSelectedOption] = useState(options[0].key);

  const handleSelect = (optionKey) => {
    setSelectedOption(optionKey);
  };

  const openFrameContainer22 = useCallback(() => {
    setFrameContainer22Visible(true);
  }, []);

  const closeFrameContainer22 = useCallback(() => {
    setFrameContainer22Visible(false);
  }, []);

  const openFrameContainer30 = useCallback(() => {
    setFrameContainer30Visible(true);
  }, []);

  const closeFrameContainer30 = useCallback(() => {
    setFrameContainer30Visible(false);
  }, []);

  const openFrameContainer38 = useCallback(() => {
    setFrameContainer38Visible(true);
  }, []);

  const closeFrameContainer38 = useCallback(() => {
    setFrameContainer38Visible(false);
  }, []);

 
  const [showAdditionalButtons, setShowAdditionalButtons] = useState(false);
  const [showAdditionalButtons2, setShowAdditionalButtons2] = useState(false);
  const [showAdditionalButtons3, setShowAdditionalButtons3] = useState(false);
  const [expanded, setExpanded] = useState(false);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

  const handlePress = () => {
    setExpanded(!expanded);
   
  }

  const handlePress2 = () => {
    setExpanded2(!expanded2);
    
  };

  const handlePress3 = () => {
    setExpanded3(!expanded3);
    
  }



  const toggleButtons = () => {
    setShowAdditionalButtons(!showAdditionalButtons);
  };
  const toggleButtons2 = () => {
    setShowAdditionalButtons2(!showAdditionalButtons2);
  };
  const toggleButtons3 = () => {
    setShowAdditionalButtons3(!showAdditionalButtons3);
  };

  const handleSelection = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons(false);
  };

  const handleSelection2 = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons2(false);
  };
  const handleSelection3 = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons3(false);
  };
  const windowHeight = Dimensions.get('window').height;
  const windowWidth = Dimensions.get('window').width;
  let additionalButtonsHeight = 0;
  let additionalButtonsHeight2 = 0;
  let additionalButtonsHeight3 = 0;
  if (expanded) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight = 326; // Change this value based on your actual requirements
  }
  if (expanded2) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight2 = 71; // Change this value based on your actual requirements
  }
  if (expanded3) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight3 = 71; // Change this value based on your actual requirements
  }
  const totalHeight = windowHeight + additionalButtonsHeight+additionalButtonsHeight2+additionalButtonsHeight3;

  return (
    <>
    <ScrollView>
      <View style={[styles.home,{ height:totalHeight+510,width:windowWidth}]}>
        <View style={styles.khaledAlQahtaniParent}>
          <Text style={[styles.khaledAlQahtani, styles.servicesTypo]}>
            Khaled Al Qahtani
          </Text>
          <View style={styles.groupParent}>
            <Image
              style={styles.groupIcon}
              resizeMode="cover"
              source={require("../assets/group13.png")}
            />
            <Text style={styles.alRawdahDistrict}>
              Al Rawdah district , Jeddah
            </Text>
          </View>
        </View>
        
        <TouchableOpacity
          style={styles.frame}
          onPress={() => navigation.navigate("Notifications")}
        >
          <Image
            style={styles.icon}
            resizeMode="cover"
            source={require("../assets/FrameNotify.png")}
          />
        </TouchableOpacity>
        <Text style={[styles.services,{top: 375}, styles.servicesTypo]}>Services</Text>
        {/* <View style={[styles.homeChild, styles.homeChildPosition]} /> */}
        <Image
          style={[styles.profmLogo1112, styles.homeChildPosition]}
          resizeMode="cover"
          source={require("../assets/profm-logo1-1-1-2.png")}
        />
        <View style={[styles.frameParent, styles.homeChildPosition,{top: 400,}]}>
          {/* <YearlyServiceSection /> */}
          
          <Pressable
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
          One Time Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          One time hourly reservation service
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/rectangle-4369.png")}
      />
      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress}>
      <Image
       
        resizeMode="cover"
        source={require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
    </Pressable>
    <View style={styles.container}>
     
    {expanded && (
      <View style={{
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'wrap',
   marginTop:5
  }}>
  <TouchableOpacity >
      <View style={styles.customView} >
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/hospitality.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Hospitality</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/pool.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Pool Maintenance</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/electric.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Electrical Works</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/sanitary.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Sanitary&Plumbing</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/pest2.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Pest Control</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView}>
        <Image
          source={require('../assets/landscape.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Landscaping</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={{backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    width: 163,
    margin:8,
    height:50,
    left:"-28%"}}>
        <Image
          source={require('../assets/carpentry.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Carpentry</Text>
      </View>
      </TouchableOpacity>
      {/* Repeat for remaining views */}
    </View>
      )}
   </View>
   
     {/* <YearlyServiceSection /> */}
     <Pressable 
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress2}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
          Monthly Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          Periodic service with several visits monthly.
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/monthly.png")}
      />
      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress2}>
      <Image
       
        resizeMode="cover"
        source={require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
     
    </Pressable>
    
    <View style={styles.container}>
     
    {expanded2 && (
      <View style={{
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'nowrap', // Adjust the margin as needed
    marginTop: 5,
    margin:10,
    left:26
    
  }}>
  <TouchableOpacity>
      <View style={styles.customView2}>
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView2}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      
      
     
       
      
     
     
    </View>
      )}
   </View>
    

      {/* <YearlyServiceSection /> */}
      <Pressable

      
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress3}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
         Yearly Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          Multi-visit yearly service available through contract
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/yearly.png")}
      />
      

      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress3}>
      <Image
       
        resizeMode="cover"
        source={require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
    </Pressable>
    <View style={styles.container}>
     
    {expanded3 && (
      <View style={{
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'nowrap', // Adjust the margin as needed
    marginTop: 5,
    margin:10,
    left:26
  }}>
  <TouchableOpacity>
      <View style={styles.customView3}>
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity>
      <View style={styles.customView3}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      
      
     
       
      
     
     
    </View>
      )}
   </View>
   

           {/* <YearlyServiceSection /> */}
           <View style={{top:"2%",width:360}}>
           <Text style={{color:"black",fontWeight:"bold",padding:5,left:"0%"}}>Best Offers</Text>
           {options.length > 0 && (
        <CustomRadioButton options={options} selectedOption={selectedOption} onSelect={handleSelect}  />
      )}</View>
          {/* <BestOffersSection /> */}
          <Modal animationType="fade" transparent visible={frameContainer22Visible}>
        <View style={styles.frameContainer22Overlay}>
          <Pressable
            style={styles.frameContainer22Bg}
            onPress={closeFrameContainer22}
          />
          <ViewDetails6 onClose={closeFrameContainer22} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer30Visible}>
        <View style={styles.frameContainer30Overlay}>
          <Pressable
            style={styles.frameContainer30Bg}
            onPress={closeFrameContainer30}
          />
          <ViewDetails5 onClose={closeFrameContainer30} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer38Visible}>
        <View style={styles.frameContainer38Overlay}>
          <Pressable
            style={styles.frameContainer38Bg}
            onPress={closeFrameContainer38}
          />
          <ViewDetails4 onClose={closeFrameContainer38} />
        </View>
      </Modal>
        </View>
        <Property1Default3
          fiRrZoomOut={require("../assets/firrzoomout.png")}
          property1DefaultPosition="absolute"
          property1DefaultMarginLeft={"0%"}
          property1DefaultTop={140}
          property1DefaultLeft="2%"
        />
        {/* <Property1Default4 /> */}
        <DiscountCarousal/>
       
      </View>

      {/* <Modal animationType="fade" transparent visible={frameContainer22Visible}>
        <View style={styles.frameContainer22Overlay}>
          <Pressable
            style={styles.frameContainer22Bg}
            onPress={closeFrameContainer22}
          />
          <ViewDetails6 onClose={closeFrameContainer22} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer30Visible}>
        <View style={styles.frameContainer30Overlay}>
          <Pressable
            style={styles.frameContainer30Bg}
            onPress={closeFrameContainer30}
          />
          <ViewDetails5 onClose={closeFrameContainer30} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer38Visible}>
        <View style={styles.frameContainer38Overlay}>
          <Pressable
            style={styles.frameContainer38Bg}
            onPress={closeFrameContainer38}
          />
          <ViewDetails4 onClose={closeFrameContainer38} />
        </View>
      </Modal> */}
      </ScrollView>
    </>
  );
};

const styles = StyleSheet.create({
  servicesTypo: {
    textAlign: "left",
    color: Color.colorBlack,
    textTransform: "capitalize",
    fontFamily: FontFamily.dGBaysan,
  },
  
  imageD: {
    width: 20,
    height: 20,
    marginRight: 10,
  },
  customView2: {
    width: 163, // Two views per row
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    margin:5,
    height:50,
  },
  customView3: {
    width: 163, // Two views per row
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    margin:5,
    height:50,
  },
  textD: {
    fontSize: 14,
    color:"black"
  },
  customView: {
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    width: 163,
    margin:8,
    height:50, // Two views per row
  },
  
  radioButton: {
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 20,
    borderWidth: 2,
    borderColor:Color.praimary,
    marginHorizontal: 5,
  },
  lastRadioButton: {
    borderRightWidth: 0,
  },
  radioText: {
    fontSize: 16,
  },
  homeChildPosition: {
    left: "47.5%",
    position: "absolute",
  },
  oneTypo: {
    textAlign: "left",
    fontFamily: FontFamily.dGBaysan,
  },
  property1oneTimeServiceChild: {
    height: "100%",
    width: "100%",
    top: "0%",
    right: "0%",
    bottom: "0%",
    left: "0%",
    borderRadius: Border.br_5xs,
    backgroundColor: Color.colorAliceblue_200,
    borderStyle: "solid",
    borderColor: Color.praimary,
    borderWidth: 0.5,
    position: "absolute",
  },
  oneTimeService: {
    fontSize: FontSize.size_sm,
    textTransform: "capitalize",
    fontWeight: "600",
    color: Color.praimary,
    display: "flex",
    alignItems: "center",
    width: 120,
    height: 16,
  },
  oneTimeHourlyReservation: {
    fontSize: FontSize.med_size,
    lineHeight: 18,
    fontWeight: "300",
    color: Color.grayBlack,
    width: 184,
    height: 34,
    marginTop: 4,
  },
  oneTimeServiceParent: {
    top: 16,
    left: 16,
    position: "absolute",
  },
  property1oneTimeServiceItem: {
    top: 0,
    left: "62%",
    borderTopRightRadius: Border.br_5xs,
    borderBottomRightRadius: Border.br_5xs,
    width: 130,
    position: "absolute",
    height: 86,
  },
  groupIconN: {
    height: "8.14%",
    marginLeft: -5.5,
    top: "82.56%",
    bottom: "9.3%",
    left: "50%",
    maxHeight: "100%",
    width: "10%",
    position: "absolute",
  },
  property1oneTimeService: {
    shadowColor: "rgba(0, 0, 0, 0.05)",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowRadius: 15,
    elevation: 15,
    shadowOpacity: 1,
    width: 343,
    height: 86,
    marginTop:10
  },
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'wrap',
  },
  frameContainer22Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer22Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  frameContainer30Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer30Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  frameContainer38Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer38Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  khaledAlQahtani: {
    fontSize: FontSize.size_sm,
    width: 130,
    fontWeight: "300",
    color: Color.colorBlack,
    textTransform: "capitalize",
  },
  groupIcon: {
    width: 10,
    height: 14,
  },
  alRawdahDistrict: {
    fontSize: FontSize.med_size,
    color: Color.grayBlack,
    textAlign: "center",
    marginLeft: "2%",
    fontFamily: FontFamily.dGBaysan,
    fontWeight: "300",
  },
  groupParent: {
    flexDirection: "row",
    justifyContent: "center",
    marginTop: 4,
    alignItems: "center",
    height: 14,
  },
  khaledAlQahtaniParent: {
    top: 74,
    height: 37,
    left: "4%",
    position: "absolute",
  },
  icon: {
    width: "100%",
    height: "100%",
    overflow: "hidden",
  },
  frame: {
    right: "10%",
    top: 78,
    width: 24,
    height: 24,
    position: "absolute",
  },
  services: {
   
    fontSize: FontSize.size_base,
    fontWeight: "600",
    display: "flex",
    width: 68,
    height: 18,
    alignItems: "center",
    color: Color.colorBlack,
    textTransform: "capitalize",
    left: "4%",
    position: "absolute",
  },
  homeChild: {
    marginLeft: -174.5,
    top: 905,
    width: 349,
    height: 97,
    overflow: "hidden",
  },
  profmLogo1112: {
    marginLeft:"-9%",
    top: 35,
    width: 110,
    height: 30,
  },
  groupContainer: {
    marginTop: 24,
  },
  frameParent: {
    marginLeft: "-45.5%",
    
  },
  home: {
    backgroundColor: Color.colorGray_100,
   
   
  },
});

export default Home;

//home end------------
//home start 25-2-24--
import React, { useState, useCallback,useEffect } from "react";
import { Text, StyleSheet, Image, View, Pressable,BackHandler, Modal, ScrollView,Dimensions,Button,TouchableOpacity, FlatList, TextInput  } from "react-native";
import LinearGradient from "react-native-linear-gradient";
import ViewDetails6 from "./ViewDetails6";
import ViewDetails5 from "./ViewDetails5";
import ViewDetails4 from "./ViewDetails4";
import { useNavigation } from "@react-navigation/native";
import YearlyServiceSection from "./YearlyServiceSection";
import BestOffersSection from "./BestOffersSection";
import FormSection from "./FormSection";
import Property1Default3 from "./Property1Default3";
import Property1Default4 from "./Property1Default4";
import SectionMenu from "./SectionMenu";
import { Color, FontFamily, FontSize,Border } from "../GlobalStyles";
import DiscountCarousal from "../screens/DiscountCarousal";
import { isEnabled } from "react-native/Libraries/Performance/Systrace";
import { Badge } from 'react-native-paper';
import messaging from '@react-native-firebase/messaging';




{/* */}
const CustomRadioButton = ({ options, selectedOption, onSelect }) => {
  const renderItem = ({ item }) => (
    <TouchableOpacity
      style={[
        styles.radioButton,
        { backgroundColor: selectedOption === item.key ? Color.praimary : 'transparent' },
        item.key === options.length ? styles.lastRadioButton : null,
      ]}
      onPress={() => onSelect(item.key)}
    >
      <Text
        style={[
          styles.radioText,
          { color: selectedOption === item.key ? 'white' : Color.praimary },
        ]}
      >
        {item.text}
      </Text>
    </TouchableOpacity>
  );

  const renderSelectedView = () => {
    
  const [frameContainer22Visible, setFrameContainer22Visible] = useState(false);
  const [frameContainer30Visible, setFrameContainer30Visible] = useState(false);
  const [frameContainer38Visible, setFrameContainer38Visible] = useState(false);
    const openFrameContainer22 = useCallback(() => {
      setFrameContainer22Visible(true);
    }, []);
  
    const closeFrameContainer22 = useCallback(() => {
      setFrameContainer22Visible(false);
    }, []);
  
    const openFrameContainer30 = useCallback(() => {
      setFrameContainer30Visible(true);
    }, []);
  
    const closeFrameContainer30 = useCallback(() => {
      setFrameContainer30Visible(false);
    }, []);
  
    const openFrameContainer38 = useCallback(() => {
      setFrameContainer38Visible(true);
    }, []);
  
    const closeFrameContainer38 = useCallback(() => {
      setFrameContainer38Visible(false);
    }, []);
    const selectedItem = options.find((item) => item.key === selectedOption);
    if (!selectedItem) return null;

    switch (selectedItem.key) {
      case 1:
        return(
          <View style={styles.groupContainer}>
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-1.png")}
            cleaningTypeImageUrl="Regular cleaning"
            cleaningOptionImageId="(2 "
            rating="4.3"
            priceText="79 SAR "
            servicePriceText="100 SAR "
            discountPercentage="off 30 %"
            onFramePressablePress={openFrameContainer22}
          />
          {/*toggle btn */}
         
           {/*toggle btn */}
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-11.png")}
            cleaningTypeImageUrl="deep cleaning"
            cleaningOptionImageId="(4 "
            rating="4.6"
            priceText="240 SAR "
            servicePriceText="300 SAR "
            discountPercentage="off 20 %"
            propMarginTop={16}
            propLeft={291}
            onFramePressablePress={openFrameContainer30}
          />
          <FormSection
            cleaningServiceImageId={require("../assets/younghousekeeperfemalewithcleaningsupply-12.png")}
            cleaningTypeImageUrl="Facade cleaning"
            cleaningOptionImageId="(4 "
            rating="4.8"
            priceText="700 SAR "
            servicePriceText="900 SAR "
            discountPercentage="off 15 %"
            propMarginTop={16}
            propLeft={295}
            onFramePressablePress={openFrameContainer38}
          />
        </View>
        ) ;
      case 2:
        return <View style={styles.view}><Text>Hospitality</Text></View>;
      case 3:
        return <View style={styles.view}><Text>Maintenance</Text></View>;
      case 4:
        return <View style={styles.view}><Text>Electrical Works</Text></View>;
      case 5:
        return <View style={styles.view}><Text>Sanitary &Plumbing</Text></View>;
      case 6:
        return <View style={styles.view}><Text>HVAC</Text></View>;
      case 7:
        return <View style={styles.view}><Text>Pest Control</Text></View>;
      case 8:
        return <View style={styles.view}><Text>Landscape</Text></View>;
      case 9:
        return <View style={styles.view}><Text>Carpentry</Text></View>;
      default:
        return null;
    }
  };

  return (
    <>
    <FlatList
      data={options}
      renderItem={renderItem}
      keyExtractor={(item) => item.key.toString()}
      horizontal={true}
      showsHorizontalScrollIndicator={false}
    />
     {renderSelectedView()}
     
     </>
    
  );
};



// Example usage:
const options = [
  { key: 1, text: 'Cleaning' },
  { key: 2, text: 'Hospitality' },
  { key: 3, text: 'Maintenance' },
  { key: 4, text: 'Electrical Works' },
  { key: 5, text: 'Sanitary &Plumbing' },
  { key: 6, text: 'HVAC' },
  { key: 7, text: 'Pest control' },
  { key: 8, text: 'Landscaping' },
  { key: 9, text: 'Carpentry' },
];
{/* */}

const Home = () => {

  useEffect(() => {
    const backAction = () => {
      // Return true to prevent going back
      return true;
    };

    // Add event listener for the hardware back button
    const backHandler = BackHandler.addEventListener(
      'hardwareBackPress',
      backAction
    );

    // Remove the event listener when the component unmounts
    return () => backHandler.remove();
  }, []);
  //back end--
  const [frameContainer22Visible, setFrameContainer22Visible] = useState(false);
  const [frameContainer30Visible, setFrameContainer30Visible] = useState(false);
  const [frameContainer38Visible, setFrameContainer38Visible] = useState(false);
  const navigation = useNavigation();
  const [selectedOption, setSelectedOption] = useState(options[0].key);

  const handleSelect = (optionKey) => {
    setSelectedOption(optionKey);
  };

  const openFrameContainer22 = useCallback(() => {
    setFrameContainer22Visible(true);
  }, []);

  const closeFrameContainer22 = useCallback(() => {
    setFrameContainer22Visible(false);
  }, []);

  const openFrameContainer30 = useCallback(() => {
    setFrameContainer30Visible(true);
  }, []);

  const closeFrameContainer30 = useCallback(() => {
    setFrameContainer30Visible(false);
  }, []);

  const openFrameContainer38 = useCallback(() => {
    setFrameContainer38Visible(true);
  }, []);

  const closeFrameContainer38 = useCallback(() => {
    setFrameContainer38Visible(false);
  }, []);

 
  const [showAdditionalButtons, setShowAdditionalButtons] = useState(false);
  const [showAdditionalButtons2, setShowAdditionalButtons2] = useState(false);
  const [showAdditionalButtons3, setShowAdditionalButtons3] = useState(false);
  const [expanded, setExpanded] = useState(false);
  const [expanded2, setExpanded2] = useState(false);
  const [expanded3, setExpanded3] = useState(false);

  const naviClean=()=>{
    navigation.navigate('OneTimeService')
  };
  const naviHosp=()=>{
    navigation.navigate('HospitalityServices')
  };
  const naviPool=()=>{
    navigation.navigate('PoolMaintenance')
  };
  const naviElec=()=>{
    navigation.navigate('ElectricalWorks')
  };
  const naviSanitary=()=>{
    navigation.navigate('SanitaryPlumbing')
  };
  const naviHVAC=()=>{
    navigation.navigate('HVAC')
  };
  const naviPest=()=>{
    navigation.navigate('PestControl')
  };
  const naviLand=()=>{
    navigation.navigate('LANDSCAPING')
  };
  const naviCarp=()=>{
    navigation.navigate('CarpentryWork')
  };

  const handlePress = () => {
    setExpanded(!expanded);
   
  }

  const handlePress2 = () => {
    setExpanded2(!expanded2);
    
  };

  const handlePress3 = () => {
    setExpanded3(!expanded3);
    
  }



  const toggleButtons = () => {
    setShowAdditionalButtons(!showAdditionalButtons);
  };
  const toggleButtons2 = () => {
    setShowAdditionalButtons2(!showAdditionalButtons2);
  };
  const toggleButtons3 = () => {
    setShowAdditionalButtons3(!showAdditionalButtons3);
  };

  const handleSelection = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons(false);
  };

  const handleSelection2 = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons2(false);
  };
  const handleSelection3 = (option) => {
    // Handle selection logic here
    console.log('Selected:', option);
    // Minimize additional buttons after selection
    setShowAdditionalButtons3(false);
  };
  const windowHeight = Dimensions.get('window').height;
  const windowWidth = Dimensions.get('window').width;
  let additionalButtonsHeight = 0;
  let additionalButtonsHeight2 = 0;
  let additionalButtonsHeight3 = 0;
  if (expanded) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight = 326; // Change this value based on your actual requirements
  }
  if (expanded2) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight2 = 71; // Change this value based on your actual requirements
  }
  if (expanded3) {
    // Calculate additional buttons height based on number of buttons and their styling
    additionalButtonsHeight3 = 71; // Change this value based on your actual requirements
  }
  const totalHeight = windowHeight + additionalButtonsHeight+additionalButtonsHeight2+additionalButtonsHeight3;

//push noti counter--
const [notificationCount, setNotificationCount] = useState(0);
const check=async()=>{
const fcmToken = await messaging().getToken();
console.log(fcmToken)
}
check();
useEffect(() => {
  // Request permission for receiving notifications (optional)
  messaging().requestPermission();

  // Get initial notification count when app is opened
  messaging().getInitialNotification().then(notification => {
    if (notification) {
      setNotificationCount(notificationCount + 1);
    }
  });

  // Register listener for receiving messages while the app is in foreground
  const unsubscribe = messaging().onMessage(async remoteMessage => {
    setNotificationCount(notificationCount + 1);
  });

  // Register background message handler for receiving messages while the app is in background or terminated
  messaging().setBackgroundMessageHandler(async remoteMessage => {
    setNotificationCount(notificationCount + 1);
  });

  return unsubscribe;
}, []);

//push noti counter end--





  return (
    <>
    <ScrollView>
      <View style={[styles.home,{ height:totalHeight+510,width:windowWidth}]}>
        <View style={styles.khaledAlQahtaniParent}>
          <Text style={[styles.khaledAlQahtani, styles.servicesTypo]}>
            Khaled Al Qahtani
          </Text>
          <View style={styles.groupParent}>
            <Image
              style={styles.groupIcon}
              resizeMode="cover"
              source={require("../assets/group13.png")}
            />
            <Text style={styles.alRawdahDistrict}>
              Al Rawdah district , Jeddah
            </Text>
          </View>
          </View>
        
          <TouchableOpacity
    style={[styles.frame, { position: 'absolute', top: 78, right:"4%", zIndex: 10 }]}
    onPress={() => {
      navigation.navigate("Notifications");
    }}
  >
  <View style={{top:6}}>
    <Badge visible={notificationCount > 0} size={15}>
        {notificationCount}
      </Badge>
      </View>
    <Image
      style={styles.icon}
      resizeMode="cover"
      source={require("../assets/notificationIcon1.png")}
    />
    
  </TouchableOpacity>
        <Text style={[styles.services,{top: 375}, styles.servicesTypo]}>Services</Text>
        {/* <View style={[styles.homeChild, styles.homeChildPosition]} /> */}
        <Image
          style={[styles.profmLogo1112, {position:"absolute",left:"35%"}]}
          resizeMode="cover"
          source={require("../assets/profm-logo1-1-1-2.png")}
        />
        <View style={[styles.frameParent, styles.homeChildPosition,{top: 400,}]}>
          {/* <YearlyServiceSection /> */}
          
          <Pressable
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
          One Time Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          One time hourly reservation service
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/rectangle-4369.png")}
      />
      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress}>
      <Image
       
        resizeMode="cover"
        source={expanded ? require("../assets/group1Flip.png") : require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
    </Pressable>
    <View style={styles.container}>
     
    {expanded && (
      <View style={{
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
    flexDirection: 'row',
    flexWrap: 'wrap',
   left:"-4%",
   marginTop:5
  }}>
  <TouchableOpacity onPress={naviClean}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviHosp}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/hospitality.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Hospitality</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviPool}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/pool.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Pool Maintenance</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviElec}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/electric.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Electrical Works</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviSanitary}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/sanitary.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Sanitary&Plumbing</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviHVAC}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviPest}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/pest2.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Pest Control</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviLand}>
      <View style={styles.customView}>
        <Image
          source={require('../assets/landscape.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Landscaping</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviCarp}>
      <View style={{backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    width: 163,
    margin:8,
    height:50,
    left:"-28%"}}>
        <Image
          source={require('../assets/carpentry.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Carpentry</Text>
      </View>
      </TouchableOpacity>
      {/* Repeat for remaining views */}
    </View>
      )}
   </View>
   
     {/* <YearlyServiceSection /> */}
     <Pressable 
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress2}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
          Monthly Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          Periodic service with several visits monthly.
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/monthly.png")}
      />
      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress2}>
      <Image
       
        resizeMode="cover"
        source={expanded2 ? require("../assets/group1Flip.png") : require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
     
    </Pressable>
    
    <View >
     
    {expanded2 && (
      <View style={{flex:1,flexDirection:"row"}}>
  <TouchableOpacity onPress={naviClean}>
      <View style={styles.customView2}>
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviHVAC}>
      <View style={styles.customView2}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      
      
     
       
      
     
     
    </View>
      )}
   </View>
    

      {/* <YearlyServiceSection /> */}
      <Pressable

      
      style={[styles.property1oneTimeService, ]}
      onPress={handlePress3}
    >
      <View style={styles.property1oneTimeServiceChild} />
      <View style={styles.oneTimeServiceParent}>
        <Text style={[styles.oneTimeService, styles.oneTypo]}>
         Yearly Service
        </Text>
        <Text
          style={[
            styles.oneTimeHourlyReservation,
            styles.oneTypo,
            
          ]}
        >
          Multi-visit yearly service available through contract
        </Text>
      </View>
      
      <Image
        style={styles.property1oneTimeServiceItem}
        resizeMode="cover"
        source={require("../assets/yearly.png")}
      />
      

      <TouchableOpacity  style={styles.groupIconN} onPress={handlePress3}>
      <Image
       
        resizeMode="cover"
        source={expanded3 ? require("../assets/group1Flip.png") : require("../assets/group1.png")}
      />
      </TouchableOpacity>
     
    </Pressable>
    <View style={styles.container}>
     
    {expanded3 && (
      <View style={{flex:1,flexDirection:"row"}}>
  <TouchableOpacity onPress={naviClean}>
      <View style={styles.customView3}>
        <Image
          source={require('../assets/cleanimage.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>Cleaning service</Text>
      </View>
      </TouchableOpacity>
      <TouchableOpacity onPress={naviHVAC}>
      <View style={styles.customView3}>
        <Image
          source={require('../assets/hvac.png')}
          style={styles.imageD}
        />
        <Text style={styles.textD}>HVAC</Text>
      </View>
      </TouchableOpacity>
      
      
     
       
      
     
     
    </View>
      )}
   </View>
   

           {/* <YearlyServiceSection /> */}
           <View style={{top:"2%",width:360}}>
           <Text style={{color:"black",fontWeight:"bold",padding:5,left:"0%"}}>Best Offers</Text>
           {options.length > 0 && (
        <CustomRadioButton options={options} selectedOption={selectedOption} onSelect={handleSelect}  />
      )}</View>
          {/* <BestOffersSection /> */}
          <Modal animationType="fade" transparent visible={frameContainer22Visible}>
        <View style={styles.frameContainer22Overlay}>
          <Pressable
            style={styles.frameContainer22Bg}
            onPress={closeFrameContainer22}
          />
          <ViewDetails6 onClose={closeFrameContainer22} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer30Visible}>
        <View style={styles.frameContainer30Overlay}>
          <Pressable
            style={styles.frameContainer30Bg}
            onPress={closeFrameContainer30}
          />
          <ViewDetails5 onClose={closeFrameContainer30} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer38Visible}>
        <View style={styles.frameContainer38Overlay}>
          <Pressable
            style={styles.frameContainer38Bg}
            onPress={closeFrameContainer38}
          />
          <ViewDetails4 onClose={closeFrameContainer38} />
        </View>
      </Modal>
        </View>
        {/* <Property1Default3
          fiRrZoomOut={require("../assets/firrzoomout.png")}
          property1DefaultPosition="absolute"
          property1DefaultMarginLeft={"0%"}
          property1DefaultTop={140}
          property1DefaultLeft="2%"
        /> */}

        <View style={{top:130}} >
        
         
          <View style={styles.rectangleParent}>
            <View style={styles.frameShadowBox} />
            <View style={[styles.frameGroup, styles.frameGroupPosition]}>
               <View style={styles.lockParent}>
                <Image
                  style={styles.iconLayout}
                  resizeMode="cover"
                  source={require("../assets/firrzoomout.png")}
                />
                <TextInput 
            placeholder="Search"
            placeholderTextColor="#D3D3D3"
            maxLength={40}
            style={{color:"#006daa", padding: 10, marginTop: '2%'}}/>
              
              </View>
             
            </View>
            
          </View>
        </View>
        {/* <Property1Default4 /> */}
        <DiscountCarousal/>
       
      </View>

      {/* <Modal animationType="fade" transparent visible={frameContainer22Visible}>
        <View style={styles.frameContainer22Overlay}>
          <Pressable
            style={styles.frameContainer22Bg}
            onPress={closeFrameContainer22}
          />
          <ViewDetails6 onClose={closeFrameContainer22} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer30Visible}>
        <View style={styles.frameContainer30Overlay}>
          <Pressable
            style={styles.frameContainer30Bg}
            onPress={closeFrameContainer30}
          />
          <ViewDetails5 onClose={closeFrameContainer30} />
        </View>
      </Modal>

      <Modal animationType="fade" transparent visible={frameContainer38Visible}>
        <View style={styles.frameContainer38Overlay}>
          <Pressable
            style={styles.frameContainer38Bg}
            onPress={closeFrameContainer38}
          />
          <ViewDetails4 onClose={closeFrameContainer38} />
        </View>
      </Modal> */}
      </ScrollView>
    </>
  );
};

const styles = StyleSheet.create({
  servicesTypo: {
    textAlign: "left",
    color: Color.colorBlack,
    textTransform: "capitalize",
    fontFamily: FontFamily.dGBaysan,
  },
  iconLayout: {
    height: 18,
    width: 18,
  },
  lockParent: {
    flexDirection: "row",
    alignItems: "center",
  },
  frameGroupPosition: {
    zIndex: 1,
    left: 12,
    flexDirection: "row",
    position: "absolute",
  },
  frameShadowBox: {
    zIndex: 0,
    height: 48,
    width: "96%",
    borderWidth: 0.3,
    borderColor: Color.a6A6A6,
    borderStyle: "solid",
    shadowOpacity: 1,
    elevation: 20,
    shadowRadius: 20,
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowColor: "rgba(0, 0, 0, 0.03)",
    backgroundColor: Color.whait,
    borderRadius: Border.br_5xs,
    left:"2%"
  },
  frameGroup: {
    top: 3,
    zIndex: 1,
    left: 12,
  },
 
  
  imageD: {
    width: 20,
    height: 20,
    marginRight: 10,
  },
  customView2: {
    width: 163, // Two views per row
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    margin:5,
    height:50,
  },
  customView3: {
    width: 163, // Two views per row
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    margin:5,
    height:50,
  },
  textD: {
    fontSize: 14,
    color:"black"
  },
  customView: {
    backgroundColor: 'white',
    padding: 10,
    marginBottom: 5,
    borderRadius: 5,
    flexDirection: 'row',
    alignItems: 'center',
    borderColor: '#d7e1e5',
    borderWidth: 1,
    width: 163,
    margin:8,
    height:50, // Two views per row
  },
  
  radioButton: {
    paddingVertical: 10,
    paddingHorizontal: 20,
    borderRadius: 20,
    borderWidth: 2,
    borderColor:Color.praimary,
    marginHorizontal: 5,
  },
  lastRadioButton: {
    borderRightWidth: 0,
  },
  radioText: {
    fontSize: 16,
  },
  homeChildPosition: {
    left: "3%",
    position: "absolute",
  },
  oneTypo: {
    textAlign: "left",
    fontFamily: FontFamily.dGBaysan,
  },
  property1oneTimeServiceChild: {
    height: "100%",
    width: "100%",
    top: "0%",
    right: "0%",
    bottom: "0%",
    left: "0%",
    borderRadius: Border.br_5xs,
    backgroundColor: Color.colorAliceblue_200,
    borderStyle: "solid",
    borderColor: Color.praimary,
    borderWidth: 0.5,
    position: "absolute",
  },
  oneTimeService: {
    fontSize: FontSize.size_sm,
    textTransform: "capitalize",
    fontWeight: "600",
    color: Color.praimary,
    display: "flex",
    alignItems: "center",
    width: 120,
    height: 16,
  },
  oneTimeHourlyReservation: {
    fontSize: FontSize.med_size,
    lineHeight: 18,
    fontWeight: "300",
    color: Color.grayBlack,
    width: 184,
    height: 34,
    marginTop: 4,
  },
  oneTimeServiceParent: {
    top: 16,
    left: 16,
    position: "absolute",
  },
  property1oneTimeServiceItem: {
    top: 0,
    left: "62%",
    borderTopRightRadius: Border.br_5xs,
    borderBottomRightRadius: Border.br_5xs,
    width: 130,
    position: "absolute",
    height: 86,
  },
  groupIconN: {
    height: "8.14%",
    marginLeft: -5.5,
    top: "82.56%",
    bottom: "9.3%",
    left: "50%",
    maxHeight: "100%",
    width: "10%",
    position: "absolute",
  },
  property1oneTimeService: {
    shadowColor: "rgba(0, 0, 0, 0.05)",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowRadius: 15,
    elevation: 15,
    shadowOpacity: 1,
    width: "93%",
    height: 86,
    marginTop:10
  },
  frameContainer22Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer22Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  frameContainer30Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer30Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  frameContainer38Overlay: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
    backgroundColor: "rgba(113, 113, 113, 0.3)",
  },
  frameContainer38Bg: {
    position: "absolute",
    width: "100%",
    height: "100%",
    left: 0,
    top: 0,
  },
  khaledAlQahtani: {
    fontSize: FontSize.size_sm,
    width: 130,
    fontWeight: "300",
    color: Color.colorBlack,
    textTransform: "capitalize",
  },
  groupIcon: {
    width: 10,
    height: 14,
  },
  alRawdahDistrict: {
    fontSize: FontSize.med_size,
    color: Color.grayBlack,
    textAlign: "center",
    marginLeft: "2%",
    fontFamily: FontFamily.dGBaysan,
    fontWeight: "300",
  },
  groupParent: {
    flexDirection: "row",
    justifyContent: "center",
    marginTop: 4,
    alignItems: "center",
    height: 14,
  },
  khaledAlQahtaniParent: {
    top: 74,
    height: 37,
    left: "4%",
    position: "absolute",
  },
  icon: {
    width: "100%",
    height: "100%",
    overflow: "hidden",
  },
  frame: {
    right: "10%",
    top: 38,
    width: 24,
    height: 24,
    position: "absolute",
  },
  services: {
   
    fontSize: FontSize.size_base,
    fontWeight: "600",
    display: "flex",
    width: 68,
    height: 18,
    alignItems: "center",
    color: Color.colorBlack,
    textTransform: "capitalize",
    left: "4%",
    position: "absolute",
  },
  homeChild: {
    marginLeft: -174.5,
    top: 905,
    width: 349,
    height: 97,
    overflow: "hidden",
  },
  profmLogo1112: {
    marginLeft:"0%",
    top: 35,
    width: 110,
    height: 39,
  },
  groupContainer: {
    marginTop: 24,
  },
 
  home: {
    backgroundColor: Color.colorGray_100,
   
   
  },
});

export default Home;

//home end--
//notifications---26-2-24--
import * as React from "react";
import { StyleSheet, View, Text, Image, Pressable } from "react-native";
import WebViewBottom from "../components/WebViewBottom";
import { useNavigation } from "@react-navigation/native";
import VisitCompletedSection from "../components/VisitCompletedSection";
import OfferSection from "../components/OfferSection";
import { FontFamily, Color, FontSize, Border } from "../GlobalStyles";

const Notifications = () => {
  const navigation = useNavigation();

  return (
    <View style={[styles.notifications, styles.iconLayout]}>
      <View style={styles.navBar}>
        <WebViewBottom
          webViewBottomPosition="absolute"
          webViewBottomBackgroundColor="#fafdff"
          webViewBottomMarginLeft={-187.5}
          webViewBottomTop={0}
          webViewBottomLeft="50%"
          webViewBottomBorderBottomRightRadius={5}
          webViewBottomBorderBottomLeftRadius={5}
          webViewBottomWidth={375}
          webViewBottomHeight={34}
          webViewBottomBottom="unset"
          homeIndicatorBackgroundColor="#1d2939"
        />
      </View>
      <Text style={[styles.youHave2Container, styles.pastNoticesFlexBox]}>
        <Text style={styles.youHave}>
          <Text style={styles.youHave1}>You have</Text>
          <Text style={styles.text}>{` `}</Text>
        </Text>
        <Text style={styles.notifications1}>2 Notifications</Text>
        <Text style={styles.youHave}>
          <Text style={styles.text}>{` `}</Text>
          <Text style={styles.youHave1}>today</Text>
        </Text>
      </Text>
      <View style={[styles.tap, styles.tapPosition]}>
        <View style={[styles.tapChild, styles.tapPosition]} />
        <Pressable
          style={[styles.arrow21, styles.arrow21Layout]}
          onPress={() => navigation.goBack()}
        >
          <Image
            style={[styles.icon, styles.iconLayout]}
            resizeMode="cover"
            source={require("../assets/arrow-2-11.png")}
          />
        </Pressable>
        <Text style={[styles.notifications2, styles.pastNoticesTypo]}>
          Notifications
        </Text>
      </View>
      <VisitCompletedSection timeAgo="14 mins ago" />
      <VisitCompletedSection
        timeAgo="2 week ago"
        propTop={371}
        propBackgroundColor="unset"
      />
      <OfferSection timeAgo="40 mins ago" />
      <OfferSection
        timeAgo="2 week ago"
        propTop={460}
        propBackgroundColor="unset"
      />
      <Text style={[styles.pastNotices, styles.pastNoticesTypo]}>
        Past notices
      </Text>
    </View>
  );
};

const styles = StyleSheet.create({
  iconLayout: {
    overflow: "hidden",
    width: "100%",
  },
  pastNoticesFlexBox: {
    textAlign: "left",
    lineHeight: 16,
    left: 16,
  },
  tapPosition: {
    height: 88,
    width: 375,
    left: "50%",
    marginLeft: -187.5,
    position: "absolute",
  },
  arrow21Layout: {
    height: 24,
    top: 47,
  },
  pastNoticesTypo: {
    fontWeight: "700",
    fontFamily: FontFamily.dGBaysan,
    position: "absolute",
  },
  navBar: {
    top: 778,
    height: 34,
    width: 375,
    marginLeft: -187.5,
    left: "50%",
    position: "absolute",
  },
  youHave1: {
    color: Color.a6A6A6,
  },
  text: {
    color: Color.colorBlack,
  },
  youHave: {
    fontWeight: "300",
    fontFamily: FontFamily.dGBaysan,
  },
  notifications1: {
    color: Color.praimary,
    fontFamily: FontFamily.dGBaysan,
  },
  youHave2Container: {
    top: 113,
    fontSize: FontSize.size_3xs,
    position: "absolute",
  },
  tapChild: {
    top: 0,
    borderBottomRightRadius: Border.br_mini,
    borderBottomLeftRadius: Border.br_mini,
    backgroundColor: Color.whait,
    shadowColor: "rgba(0, 0, 0, 0.03)",
    shadowOffset: {
      width: 0,
      height: 4,
    },
    shadowRadius: 20,
    elevation: 20,
    shadowOpacity: 1,
  },
  icon: {
    height: "100%",
  },
  arrow21: {
    right: 335,
    width: 24,
    position: "absolute",
  },
  notifications2: {
    marginLeft: -74.5,
    fontSize: FontSize.size_base,
    lineHeight: 30,
    textAlign: "center",
    display: "flex",
    alignItems: "center",
    justifyContent: "center",
    width: 150,
    height: 24,
    top: 47,
    color: Color.praimary,
    left: "50%",
    fontWeight: "700",
  },
  tap: {
    top: 1,
  },
  pastNotices: {
    top: 339,
    fontSize: FontSize.size_sm,
    textTransform: "capitalize",
    color: Color.black,
    width: 194,
    height: 16,
    textAlign: "left",
    lineHeight: 16,
    left: 16,
  },
  notifications: {
    backgroundColor: Color.colorGray_100,
    flex: 1,
    height: 812,
  },
});

export default Notifications;

//noti end--
